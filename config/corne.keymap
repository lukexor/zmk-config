/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// clang-format off

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define XXX &none
#define ___ &trans

#define BASE  0
#define GAME  1
#define NAV   2
#define MEDIA 3
#define NUM   4
#define SYM   5
#define FN    6

#define GUI_A &hm LGUI A
#define ALT_R &hm LALT R
#define CTL_S &hm LCTL S
#define SFT_T &hm LSHFT S

#define SFT_N &hm RSHFT N
#define CTL_E &hm RCTL E
#define ALT_I &hm RALT I
#define GUI_O &hm RGUI O

#define HYPR_Z &hm LC(LS(LA(LG(Z))))
#define MEH_G &hm LC(LS(LA(G)))
#define MEH_M &hm RC(RS(RA(M)))
#define HYPR_FSLH &hm LC(LS(LA(LG(FSLH))))

#define MED_ESC &mo MEDIA ESC
#define NAV_SPC &mo NAV SPACE
#define SYM_RET &mo SYM RET
#define NUM_BSPC &mo NUM BSPC
#define FN_DEL &mo FN DEL

#define TOG_GAME &tog GAME

// TODO
#define U_RDO 0
#define U_PST 0
#define U_CPY 0
#define U_CUT 0
#define U_UND 0

#define rgb_tog &rgb_ug RGB_TOG

/ {
    behaviors {
        mo: momentary_on_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "MOMENTARY_ON_HOLD";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
        rgb_eff: rgb_effect {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_EFFECT";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_HUE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rgb_sat: rgb_sat {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_SAT";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rgb_bri: rgb_bri {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRIGHTNESS";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp Q     &kp W     &kp F     &kp P     &kp B        &kp J     &kp L     &kp U     &kp Y     &kp SQT
                GUI_A     ALT_R     CTL_S     SFT_T     MEH_G        MEH_M     SFT_N     CTL_E     ALT_I     GUI_O
                HYPR_Z    &kp X     &kp C     &kp D     &kp V        &kp K     &kp H     &kp COMMA &kp DOT   HYPR_FSLH
                                    MED_ESC   NAV_SPC   &kp TAB      SYM_RET   NUM_BSPC  FN_DEL
            >;
        };

        game {
            bindings = <
                ___       ___       ___       ___       ___          ___       ___       ___       ___       ___
                &kp A     &kp R     &kp S     ___       ___          ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___          ___       ___       ___       ___       ___
                                    ___       ___       ___          ___       ___       ___
            >;
        };

        nav {
            bindings = <
                XXX       XXX       XXX       XXX       XXX          U_RDO      U_PST     U_CPY     U_CUT     U_UND
                &kp LGUI  &kp LALT  &kp LCTL  &kp LSHFT XXX          &caps_word &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT
                TOG_GAME  XXX       XXX       XXX       XXX          &kp INS    &kp HOME  &kp PG_DN &kp PG_UP &kp END
                                    XXX       XXX       XXX          &kp RET    &kp BSPC  &kp DEL
            >;
        };

        media {
            bindings = <
                XXX       XXX       XXX       XXX       XXX          rgb_tog    &rgb_eff   &rgb_hue     &rgb_sat     &rgb_bri
                &kp LGUI  &kp LALT  &kp LCTL  &kp LSHFT XXX          XXX        &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                XXX       XXX       XXX       XXX       XXX          XXX        XXX        XXX          XXX          XXX 
                                    XXX       XXX       XXX          &kp C_STOP &kp C_PP   &kp C_MUTE
            >;
        };

        num {
            bindings = <
                &kp LBRC  &kp N7    &kp N8    &kp N9    &kp RBRC     XXX       XXX       XXX       XXX       XXX 
                &kp SEMI  &kp N4    &kp N5    &kp N6    &kp EQUAL    XXX       &kp RSHFT &kp RCTL  &kp RALT  &kp RGUI
                &kp GRAVE &kp N1    &kp N2    &kp N3    &kp BSLH     XXX       XXX       XXX       XXX       XXX 
                                    &kp DOT   &kp N0    &kp MINUS    XXX       XXX       XXX
            >;
        };

        sym {
            bindings = <
                &kp LBKT  &kp AMPS  &kp STAR  &kp LPAR  &kp RBKT     XXX       XXX       XXX       XXX       XXX 
                &kp COLON &kp DLLR  &kp PRCNT &kp CARET &kp PLUS     XXX       &kp RSHFT &kp RCTL  &kp RALT  &kp RGUI
                &kp TILDE &kp EXCL  &kp AT    &kp HASH  &kp PIPE     XXX       XXX       XXX       XXX       XXX 
                                    &kp LPAR  &kp RPAR  &kp UNDER    XXX       XXX       XXX
            >;
        };

        fn {
            bindings = <
                &kp F12   &kp F7    &kp F8    &kp F9    &kp PSCRN    XXX       XXX       XXX       XXX       XXX
                &kp F11   &kp F4    &kp F5    &kp F6    XXX          XXX       &kp RSHFT &kp RCTL  &kp RALT  &kp RGUI
                &kp F10   &kp F1    &kp F2    &kp F3    XXX          XXX       XXX       XXX       XXX       XXX
                                    &kp K_APP &kp SPACE &kp TAB      XXX       XXX       XXX
            >;
        };
    };
};

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */
#include <dt-bindings/led/led.h>
&spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    mosi-pin = <6>;
    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
    sck-pin = <5>;
    miso-pin = <7>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <11>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};
