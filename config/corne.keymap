/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// clang-format off

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Convenience maps
#define XXX &none
#define ___ &trans

// Layers
#define BASE  0
#define GAME  1
#define NAV   2
#define MOUSE 3
#define MEDIA 4
#define NUM   5
#define SYM   6
#define FN    7

// Home-row mod-taps
#define GUI_A &mt LGUI A
#define ALT_R &mt LALT R
#define CTRL_S &mt LCTRL S
#define SFT_T &mt LSHFT T
#define MEH_G &mt LC(LS(LALT)) G

#define MEH_M &mt RC(RS(RALT)) M
#define SFT_N &mt RSHFT N
#define CTRL_E &mt RCTRL E
#define ALT_I &mt RALT I
#define GUI_O &mt RGUI O

// Pinky mod-taps
#define HYPR_Z &mt LC(LS(LA(LGUI))) Z
#define HYPR_SLASH &mt LC(LS(LA(LGUI))) SLASH

// Thumb layer-taps
#define MEDIA_ESC &lt MEDIA ESC
#define NAV_SPACE &lt NAV SPACE
#define MOUSE_TAB &lt MOUSE TAB
#define SYM_RET &lt SYM RET
#define NUM_BSPC &lt NUM BSPC
#define FN_DEL &lt FN DEL

// Toggles
#define TOG_GAME &tog GAME
#define rgb_tog &rgb_ug RGB_TOG

// Customize mod-taps
&mt {
    flavor = "tap-preferred";
};

/ {
    behaviors {
        // Enable shift to cycle RGB effect backwards
        rgb_eff: rgb_effect {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_EFFECT";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Enable shift to decrease RGB hue
        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_HUE";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Enable shift to decrease RGB saturation
        rgb_sat: rgb_sat {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_SAT";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Enable shift to decrease RGB brightness
        rgb_bri: rgb_bri {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRIGHTNESS";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q     &kp W     &kp F     &kp P     &kp B        &kp J     &kp L     &kp U     &kp Y     &kp SQT
                GUI_A     ALT_R     CTRL_S    SFT_T     MEH_G        MEH_M     SFT_N     CTRL_E    ALT_I     GUI_O
                HYPR_Z    &kp X     &kp C     &kp D     &kp V        &kp K     &kp H     &kp COMMA &kp DOT   HYPR_SLASH
                                MEDIA_ESC NAV_SPACE MOUSE_TAB        SYM_RET NUM_BSPC FN_DEL
            >;
        };

        // Disable mod-taps on WASD keys
        game {
            bindings = <
                ___       ___       ___       ___       ___          ___       ___       ___       ___       ___
                &kp A     &kp R     &kp S     ___       ___          ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___          ___       ___       ___       ___       ___
                                    ___       ___       ___          ___       ___       ___
            >;
        };

        nav {
            bindings = <
                XXX       XXX       XXX       XXX       XXX          XXX        XXX       XXX       XXX       XXX
                &kp LGUI  &kp LALT  &kp LCTRL &kp LSHFT XXX          &caps_word &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT
                TOG_GAME  XXX       XXX       XXX       XXX          &kp INS    &kp HOME  &kp PG_DN &kp PG_UP &kp END
                                    XXX       XXX       XXX          &kp RET    &kp BSPC  &kp DEL
            >;
        };

        media {
            bindings = <
                XXX       XXX       XXX       XXX       XXX          rgb_tog    &rgb_eff   &rgb_hue     &rgb_sat     &rgb_bri
                &kp LGUI  &kp LALT  &kp LCTRL &kp LSHFT XXX          XXX        &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                XXX       XXX       XXX       XXX       XXX          XXX        XXX        XXX          XXX          XXX 
                                    XXX       XXX       XXX          &kp C_STOP &kp C_PP   &kp C_MUTE
            >;
        };

        num {
            bindings = <
                &kp LBRC  &kp N7    &kp N8    &kp N9    &kp RBRC     XXX       XXX       XXX       XXX       XXX 
                &kp SEMI  &kp N4    &kp N5    &kp N6    &kp EQUAL    XXX       &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI
                &kp GRAVE &kp N1    &kp N2    &kp N3    &kp BSLH     XXX       XXX       XXX       XXX       XXX 
                                    &kp DOT   &kp N0    &kp MINUS    XXX       XXX       XXX
            >;
        };

        sym {
            bindings = <
                &kp LBKT  &kp AMPS  &kp STAR  &kp LPAR  &kp RBKT     XXX       XXX       XXX       XXX       XXX 
                &kp COLON &kp DLLR  &kp PRCNT &kp CARET &kp PLUS     XXX       &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI
                &kp TILDE &kp EXCL  &kp AT    &kp HASH  &kp PIPE     XXX       XXX       XXX       XXX       XXX 
                                    &kp LPAR  &kp RPAR  &kp UNDER    XXX       XXX       XXX
            >;
        };

        fn {
            bindings = <
                &kp F12   &kp F7    &kp F8    &kp F9    &kp PSCRN    XXX       XXX       XXX       XXX       XXX
                &kp F11   &kp F4    &kp F5    &kp F6    XXX          XXX       &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI
                &kp F10   &kp F1    &kp F2    &kp F3    XXX          XXX       XXX       XXX       XXX       XXX
                                    &kp K_APP &kp SPACE &kp TAB      XXX       XXX       XXX
            >;
        };
    };
};
